// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var DOMLog = DOMLog || {}

/**
 * @enum
 */
DOMLog.Op = {
  NONE: 0,
  SelectChildren: 1,
  SelectSibling: 2,
  SelectParent: 3,
  InsertComment: 4,
  InsertText: 5,
  InsertElement: 6,
  InsertStashedNode: 7,
  ReplaceWithComment: 8,
  ReplaceWithText: 9,
  ReplaceWithElement: 10,
  ReplaceWithStashedNode: 11,
  RemoveNextSibling: 12,
  SetTextData: 13,
  EditTextData: 14,
  SetAttribute: 15,
  RemoveAttribute: 16,
  AssignStringProperty: 17,
  AssignBooleanProperty: 18,
  AssignNumberProperty: 19,
  AssignNullProperty: 20,
  DeleteProperty: 21,
  SetStyleRule: 22,
  RemoveStyleRule: 23,
  StashNextSibling: 24,
  DiscardStashed: 25
}

/**
 * @constructor
 */
DOMLog.StashNextSibling = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.StashNextSibling}
 */
DOMLog.StashNextSibling.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.StashNextSibling=} obj
 * @returns {DOMLog.StashNextSibling}
 */
DOMLog.StashNextSibling.getRootAsStashNextSibling = function(bb, obj) {
  return (obj || new DOMLog.StashNextSibling())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @returns {number}
 */
DOMLog.StashNextSibling.prototype.address = function() {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.StashNextSibling.startStashNextSibling = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} address
 */
DOMLog.StashNextSibling.addAddress = function(builder, address) {
  builder.addFieldInt32(0, address, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.StashNextSibling.endStashNextSibling = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.DiscardStashed = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.DiscardStashed}
 */
DOMLog.DiscardStashed.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.DiscardStashed=} obj
 * @returns {DOMLog.DiscardStashed}
 */
DOMLog.DiscardStashed.getRootAsDiscardStashed = function(bb, obj) {
  return (obj || new DOMLog.DiscardStashed())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @returns {number}
 */
DOMLog.DiscardStashed.prototype.address = function() {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.DiscardStashed.startDiscardStashed = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} address
 */
DOMLog.DiscardStashed.addAddress = function(builder, address) {
  builder.addFieldInt32(0, address, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.DiscardStashed.endDiscardStashed = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.AssignStringProperty = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.AssignStringProperty}
 */
DOMLog.AssignStringProperty.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.AssignStringProperty=} obj
 * @returns {DOMLog.AssignStringProperty}
 */
DOMLog.AssignStringProperty.getRootAsAssignStringProperty = function(bb, obj) {
  return (obj || new DOMLog.AssignStringProperty())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.AssignStringProperty.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.AssignStringProperty.prototype.value = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.AssignStringProperty.startAssignStringProperty = function(builder) {
  builder.startObject(2)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.AssignStringProperty.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
DOMLog.AssignStringProperty.addValue = function(builder, valueOffset) {
  builder.addFieldOffset(1, valueOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.AssignStringProperty.endAssignStringProperty = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.AssignBooleanProperty = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.AssignBooleanProperty}
 */
DOMLog.AssignBooleanProperty.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.AssignBooleanProperty=} obj
 * @returns {DOMLog.AssignBooleanProperty}
 */
DOMLog.AssignBooleanProperty.getRootAsAssignBooleanProperty = function(
  bb,
  obj
) {
  return (obj || new DOMLog.AssignBooleanProperty())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.AssignBooleanProperty.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @returns {boolean}
 */
DOMLog.AssignBooleanProperty.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.AssignBooleanProperty.startAssignBooleanProperty = function(builder) {
  builder.startObject(2)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.AssignBooleanProperty.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} value
 */
DOMLog.AssignBooleanProperty.addValue = function(builder, value) {
  builder.addFieldInt8(1, +value, +false)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.AssignBooleanProperty.endAssignBooleanProperty = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.AssignNumberProperty = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.AssignNumberProperty}
 */
DOMLog.AssignNumberProperty.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.AssignNumberProperty=} obj
 * @returns {DOMLog.AssignNumberProperty}
 */
DOMLog.AssignNumberProperty.getRootAsAssignNumberProperty = function(bb, obj) {
  return (obj || new DOMLog.AssignNumberProperty())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.AssignNumberProperty.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @returns {number}
 */
DOMLog.AssignNumberProperty.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.AssignNumberProperty.startAssignNumberProperty = function(builder) {
  builder.startObject(2)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.AssignNumberProperty.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
DOMLog.AssignNumberProperty.addValue = function(builder, value) {
  builder.addFieldFloat64(1, value, 0.0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.AssignNumberProperty.endAssignNumberProperty = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.AssignNullProperty = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.AssignNullProperty}
 */
DOMLog.AssignNullProperty.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.AssignNullProperty=} obj
 * @returns {DOMLog.AssignNullProperty}
 */
DOMLog.AssignNullProperty.getRootAsAssignNullProperty = function(bb, obj) {
  return (obj || new DOMLog.AssignNullProperty())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.AssignNullProperty.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.AssignNullProperty.startAssignNullProperty = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.AssignNullProperty.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.AssignNullProperty.endAssignNullProperty = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.DeleteProperty = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.DeleteProperty}
 */
DOMLog.DeleteProperty.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.DeleteProperty=} obj
 * @returns {DOMLog.DeleteProperty}
 */
DOMLog.DeleteProperty.getRootAsDeleteProperty = function(bb, obj) {
  return (obj || new DOMLog.DeleteProperty())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.DeleteProperty.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.DeleteProperty.startDeleteProperty = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.DeleteProperty.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.DeleteProperty.endDeleteProperty = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.SetStyleRule = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.SetStyleRule}
 */
DOMLog.SetStyleRule.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.SetStyleRule=} obj
 * @returns {DOMLog.SetStyleRule}
 */
DOMLog.SetStyleRule.getRootAsSetStyleRule = function(bb, obj) {
  return (obj || new DOMLog.SetStyleRule())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.SetStyleRule.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.SetStyleRule.prototype.value = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.SetStyleRule.startSetStyleRule = function(builder) {
  builder.startObject(2)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.SetStyleRule.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
DOMLog.SetStyleRule.addValue = function(builder, valueOffset) {
  builder.addFieldOffset(1, valueOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.SetStyleRule.endSetStyleRule = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.RemoveStyleRule = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.RemoveStyleRule}
 */
DOMLog.RemoveStyleRule.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.RemoveStyleRule=} obj
 * @returns {DOMLog.RemoveStyleRule}
 */
DOMLog.RemoveStyleRule.getRootAsRemoveStyleRule = function(bb, obj) {
  return (obj || new DOMLog.RemoveStyleRule())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.RemoveStyleRule.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.RemoveStyleRule.startRemoveStyleRule = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.RemoveStyleRule.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.RemoveStyleRule.endRemoveStyleRule = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.SetAttribute = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.SetAttribute}
 */
DOMLog.SetAttribute.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.SetAttribute=} obj
 * @returns {DOMLog.SetAttribute}
 */
DOMLog.SetAttribute.getRootAsSetAttribute = function(bb, obj) {
  return (obj || new DOMLog.SetAttribute())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.SetAttribute.prototype.namespaceURI = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.SetAttribute.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.SetAttribute.prototype.value = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.SetAttribute.startSetAttribute = function(builder) {
  builder.startObject(3)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} namespaceURIOffset
 */
DOMLog.SetAttribute.addNamespaceURI = function(builder, namespaceURIOffset) {
  builder.addFieldOffset(0, namespaceURIOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.SetAttribute.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
DOMLog.SetAttribute.addValue = function(builder, valueOffset) {
  builder.addFieldOffset(2, valueOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.SetAttribute.endSetAttribute = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.RemoveAttribute = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.RemoveAttribute}
 */
DOMLog.RemoveAttribute.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.RemoveAttribute=} obj
 * @returns {DOMLog.RemoveAttribute}
 */
DOMLog.RemoveAttribute.getRootAsRemoveAttribute = function(bb, obj) {
  return (obj || new DOMLog.RemoveAttribute())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.RemoveAttribute.prototype.namespaceURI = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.RemoveAttribute.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.RemoveAttribute.startRemoveAttribute = function(builder) {
  builder.startObject(2)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} namespaceURIOffset
 */
DOMLog.RemoveAttribute.addNamespaceURI = function(builder, namespaceURIOffset) {
  builder.addFieldOffset(0, namespaceURIOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
DOMLog.RemoveAttribute.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.RemoveAttribute.endRemoveAttribute = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.InsertText = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.InsertText}
 */
DOMLog.InsertText.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.InsertText=} obj
 * @returns {DOMLog.InsertText}
 */
DOMLog.InsertText.getRootAsInsertText = function(bb, obj) {
  return (obj || new DOMLog.InsertText())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.InsertText.prototype.data = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.InsertText.startInsertText = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
DOMLog.InsertText.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.InsertText.endInsertText = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.InsertComment = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.InsertComment}
 */
DOMLog.InsertComment.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.InsertComment=} obj
 * @returns {DOMLog.InsertComment}
 */
DOMLog.InsertComment.getRootAsInsertComment = function(bb, obj) {
  return (obj || new DOMLog.InsertComment())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.InsertComment.prototype.data = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.InsertComment.startInsertComment = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
DOMLog.InsertComment.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.InsertComment.endInsertComment = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.InsertElement = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.InsertElement}
 */
DOMLog.InsertElement.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.InsertElement=} obj
 * @returns {DOMLog.InsertElement}
 */
DOMLog.InsertElement.getRootAsInsertElement = function(bb, obj) {
  return (obj || new DOMLog.InsertElement())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.InsertElement.prototype.namespaceURI = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.InsertElement.prototype.localName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.InsertElement.startInsertElement = function(builder) {
  builder.startObject(2)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} namespaceURIOffset
 */
DOMLog.InsertElement.addNamespaceURI = function(builder, namespaceURIOffset) {
  builder.addFieldOffset(0, namespaceURIOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} localNameOffset
 */
DOMLog.InsertElement.addLocalName = function(builder, localNameOffset) {
  builder.addFieldOffset(1, localNameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.InsertElement.endInsertElement = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.InsertStashedNode = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.InsertStashedNode}
 */
DOMLog.InsertStashedNode.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.InsertStashedNode=} obj
 * @returns {DOMLog.InsertStashedNode}
 */
DOMLog.InsertStashedNode.getRootAsInsertStashedNode = function(bb, obj) {
  return (obj || new DOMLog.InsertStashedNode())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @returns {number}
 */
DOMLog.InsertStashedNode.prototype.address = function() {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.InsertStashedNode.startInsertStashedNode = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} address
 */
DOMLog.InsertStashedNode.addAddress = function(builder, address) {
  builder.addFieldInt32(0, address, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.InsertStashedNode.endInsertStashedNode = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.ReplaceWithText = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.ReplaceWithText}
 */
DOMLog.ReplaceWithText.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.ReplaceWithText=} obj
 * @returns {DOMLog.ReplaceWithText}
 */
DOMLog.ReplaceWithText.getRootAsReplaceWithText = function(bb, obj) {
  return (obj || new DOMLog.ReplaceWithText())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.ReplaceWithText.prototype.data = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.ReplaceWithText.startReplaceWithText = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
DOMLog.ReplaceWithText.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.ReplaceWithText.endReplaceWithText = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.ReplaceWithComment = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.ReplaceWithComment}
 */
DOMLog.ReplaceWithComment.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.ReplaceWithComment=} obj
 * @returns {DOMLog.ReplaceWithComment}
 */
DOMLog.ReplaceWithComment.getRootAsReplaceWithComment = function(bb, obj) {
  return (obj || new DOMLog.ReplaceWithComment())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.ReplaceWithComment.prototype.data = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.ReplaceWithComment.startReplaceWithComment = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
DOMLog.ReplaceWithComment.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.ReplaceWithComment.endReplaceWithComment = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.ReplaceWithElement = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.ReplaceWithElement}
 */
DOMLog.ReplaceWithElement.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.ReplaceWithElement=} obj
 * @returns {DOMLog.ReplaceWithElement}
 */
DOMLog.ReplaceWithElement.getRootAsReplaceWithElement = function(bb, obj) {
  return (obj || new DOMLog.ReplaceWithElement())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.ReplaceWithElement.prototype.namespaceURI = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.ReplaceWithElement.prototype.localName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.ReplaceWithElement.startReplaceWithElement = function(builder) {
  builder.startObject(2)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} namespaceURIOffset
 */
DOMLog.ReplaceWithElement.addNamespaceURI = function(
  builder,
  namespaceURIOffset
) {
  builder.addFieldOffset(0, namespaceURIOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} localNameOffset
 */
DOMLog.ReplaceWithElement.addLocalName = function(builder, localNameOffset) {
  builder.addFieldOffset(1, localNameOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.ReplaceWithElement.endReplaceWithElement = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.ReplaceWithStashedNode = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.ReplaceWithStashedNode}
 */
DOMLog.ReplaceWithStashedNode.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.ReplaceWithStashedNode=} obj
 * @returns {DOMLog.ReplaceWithStashedNode}
 */
DOMLog.ReplaceWithStashedNode.getRootAsReplaceWithStashedNode = function(
  bb,
  obj
) {
  return (obj || new DOMLog.ReplaceWithStashedNode())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @returns {number}
 */
DOMLog.ReplaceWithStashedNode.prototype.address = function() {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.ReplaceWithStashedNode.startReplaceWithStashedNode = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} address
 */
DOMLog.ReplaceWithStashedNode.addAddress = function(builder, address) {
  builder.addFieldInt32(0, address, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.ReplaceWithStashedNode.endReplaceWithStashedNode = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.SetTextData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.SetTextData}
 */
DOMLog.SetTextData.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.SetTextData=} obj
 * @returns {DOMLog.SetTextData}
 */
DOMLog.SetTextData.getRootAsSetTextData = function(bb, obj) {
  return (obj || new DOMLog.SetTextData())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.SetTextData.prototype.data = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.SetTextData.startSetTextData = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
DOMLog.SetTextData.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.SetTextData.endSetTextData = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.EditTextData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.EditTextData}
 */
DOMLog.EditTextData.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.EditTextData=} obj
 * @returns {DOMLog.EditTextData}
 */
DOMLog.EditTextData.getRootAsEditTextData = function(bb, obj) {
  return (obj || new DOMLog.EditTextData())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @returns {number}
 */
DOMLog.EditTextData.prototype.start = function() {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0
}

/**
 * @returns {number}
 */
DOMLog.EditTextData.prototype.end = function() {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.EditTextData.prototype.prefix = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
DOMLog.EditTextData.prototype.suffix = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10)
  return offset
    ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
    : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.EditTextData.startEditTextData = function(builder) {
  builder.startObject(4)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} start
 */
DOMLog.EditTextData.addStart = function(builder, start) {
  builder.addFieldInt32(0, start, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} end
 */
DOMLog.EditTextData.addEnd = function(builder, end) {
  builder.addFieldInt32(1, end, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} prefixOffset
 */
DOMLog.EditTextData.addPrefix = function(builder, prefixOffset) {
  builder.addFieldOffset(2, prefixOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} suffixOffset
 */
DOMLog.EditTextData.addSuffix = function(builder, suffixOffset) {
  builder.addFieldOffset(3, suffixOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.EditTextData.endEditTextData = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.SelectChildren = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.SelectChildren}
 */
DOMLog.SelectChildren.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.SelectChildren=} obj
 * @returns {DOMLog.SelectChildren}
 */
DOMLog.SelectChildren.getRootAsSelectChildren = function(bb, obj) {
  return (obj || new DOMLog.SelectChildren())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.SelectChildren.startSelectChildren = function(builder) {
  builder.startObject(0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.SelectChildren.endSelectChildren = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.SelectSibling = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.SelectSibling}
 */
DOMLog.SelectSibling.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.SelectSibling=} obj
 * @returns {DOMLog.SelectSibling}
 */
DOMLog.SelectSibling.getRootAsSelectSibling = function(bb, obj) {
  return (obj || new DOMLog.SelectSibling())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @returns {number}
 */
DOMLog.SelectSibling.prototype.offset = function() {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.SelectSibling.startSelectSibling = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} offset
 */
DOMLog.SelectSibling.addOffset = function(builder, offset) {
  builder.addFieldInt32(0, offset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.SelectSibling.endSelectSibling = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.SelectParent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.SelectParent}
 */
DOMLog.SelectParent.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.SelectParent=} obj
 * @returns {DOMLog.SelectParent}
 */
DOMLog.SelectParent.getRootAsSelectParent = function(bb, obj) {
  return (obj || new DOMLog.SelectParent())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.SelectParent.startSelectParent = function(builder) {
  builder.startObject(0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.SelectParent.endSelectParent = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.RemoveNextSibling = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.RemoveNextSibling}
 */
DOMLog.RemoveNextSibling.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.RemoveNextSibling=} obj
 * @returns {DOMLog.RemoveNextSibling}
 */
DOMLog.RemoveNextSibling.getRootAsRemoveNextSibling = function(bb, obj) {
  return (obj || new DOMLog.RemoveNextSibling())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.RemoveNextSibling.startRemoveNextSibling = function(builder) {
  builder.startObject(0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.RemoveNextSibling.endRemoveNextSibling = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.Change = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.Change}
 */
DOMLog.Change.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.Change=} obj
 * @returns {DOMLog.Change}
 */
DOMLog.Change.getRootAsChange = function(bb, obj) {
  return (obj || new DOMLog.Change())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @returns {DOMLog.Op}
 */
DOMLog.Change.prototype.opType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? /** @type {DOMLog.Op} */ (this.bb.readUint8(this.bb_pos + offset))
    : DOMLog.Op.NONE
}

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
DOMLog.Change.prototype.op = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6)
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.Change.startChange = function(builder) {
  builder.startObject(2)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {DOMLog.Op} opType
 */
DOMLog.Change.addOpType = function(builder, opType) {
  builder.addFieldInt8(0, opType, DOMLog.Op.NONE)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} opOffset
 */
DOMLog.Change.addOp = function(builder, opOffset) {
  builder.addFieldOffset(1, opOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.Change.endChange = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @constructor
 */
DOMLog.ChangeLog = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = undefined

  /**
   * @type {number}
   */
  this.bb_pos = 0
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {DOMLog.ChangeLog}
 */
DOMLog.ChangeLog.prototype.__init = function(i, bb) {
  this.bb_pos = i
  this.bb = bb
  return this
}

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {DOMLog.ChangeLog=} obj
 * @returns {DOMLog.ChangeLog}
 */
DOMLog.ChangeLog.getRootAsChangeLog = function(bb, obj) {
  return (obj || new DOMLog.ChangeLog())
    .__init(bb.readInt32(bb.position()) + bb.position(), bb)
}

/**
 * @param {number} index
 * @param {DOMLog.Change=} obj
 * @returns {DOMLog.Change}
 */
DOMLog.ChangeLog.prototype.log = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset
    ? (obj || new DOMLog.Change())
        .__init(
          this.bb.__indirect(
            this.bb.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb
        )
    : null
}

/**
 * @returns {number}
 */
DOMLog.ChangeLog.prototype.logLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4)
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0
}

/**
 * @param {flatbuffers.Builder} builder
 */
DOMLog.ChangeLog.startChangeLog = function(builder) {
  builder.startObject(1)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} logOffset
 */
DOMLog.ChangeLog.addLog = function(builder, logOffset) {
  builder.addFieldOffset(0, logOffset, 0)
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
DOMLog.ChangeLog.createLogVector = function(builder, data) {
  builder.startVector(4, data.length, 4)
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i])
  }
  return builder.endVector()
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
DOMLog.ChangeLog.startLogVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4)
}

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
DOMLog.ChangeLog.endChangeLog = function(builder) {
  var offset = builder.endObject()
  return offset
}

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
DOMLog.ChangeLog.finishChangeLogBuffer = function(builder, offset) {
  builder.finish(offset)
}

// Exports for Node.js and RequireJS
this.DOMLog = DOMLog
