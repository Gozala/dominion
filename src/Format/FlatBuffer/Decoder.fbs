namespace Decoder;


union Decoder {
  Error,
  Ok,
  Primitive,
  Accessor,
  Either,
  Field,
  Index,
  Null,
  Undefined,
  Optional,
  Maybe,
  Collection,
  Dictionary,
  Record,
  Form
}

enum Value:byte {
  Null,
  Boolean,
  Integer,
  Float,
  String,
  JSON
}

union JSON {
  Boolean,
  Integer,
  Float,
  String,
  JSONArray,
  JSONObject
}


table JSONArray {
  elements:[JSONElement];
}

table JSONObject {
  propreties:[JSONProperty];
}

table JSONProperty {
  name:string;
  value:JSON;
}

table JSONElement {
  value:JSON;
}


table Boolean {
  value:bool;
}

table Integer {
  value:int;
}

table String {
  value:string;
}

table Float {
  value:float;
}

table Accessor {
  name:string;
  accessor:Decoder;
}

table Collection {
  item:Decoder;
}

table Primitive {
  type:Value;
}

table Dictionary {
  dictionary:Decoder;
}

table Either {
 variants:[Variant];
}

table Variant {
  variant:Decoder;
}

table Error {
  message:string;
}

table Ok {
  ok:JSON;
}

table Field {
  name:string;
  field:Decoder;
}

table Index {
  index:int;
  member:Decoder;
}

table Form {
  form:[Field];
}

table Record {
  fields:[Field];
}

table Maybe {
  maybe:Decoder;
}

table Null {
  Null:JSON;
}

table Undefined {
  Undefined:JSON;
}

table Optional {
  optional:Decoder;
}
